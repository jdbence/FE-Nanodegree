"use strict";var El=function(){var e=function(){};return e.removeClass=function(e,t){var i,n;if(e)for(this.isHTMLCollection(e)||(e=[e]),i=0;i<e.length;i++)n=e[i].className.replace(" "+t,""),e[i].className=n},e.addClass=function(e,t){var i;if(e)for(this.isHTMLCollection(e)||(e=[e]),i=0;i<e.length;i++)e[i].className.indexOf(" "+t)<0&&(e[i].className+=" "+t)},e.addListener=function(e,t,i){var n;if(e)for(void 0===e.length&&(e=[e]),n=0;n<e.length;n++)e[n].addEventListener(t,i)},e.show=function(e){this.removeClass(this.getElements(e),"hidden")},e.hide=function(e){this.addClass(this.getElements(e),"hidden")},e.getElements=function(e){return this.isString(e)?-1!==e.indexOf("#")?document.getElementById(e):document.getElementsByClassName(e):null},e.isString=function(e){return this.isType(e,"[object String]")},e.isHTMLCollection=function(e){return this.isType(e,"[object HTMLCollection]")},e.isType=function(e,t){return Object.prototype.toString.call(e)===t},e}(),Entity=function(e,t,i,n,s,r){this.owner=e,e.x=t,e.y=i,e.sprite=n||null,e.offsetX=s||0,e.offsetY=r||0,e.flipped=!1,e.alpha=1,e.isAlive=!0,e.speed=0,e.angle=0};!function(){function e(){var e=!0;for(var t in r)r.hasOwnProperty(t)&&!r[t]&&(e=!1);return e}function t(t){if(r[t])return r[t];var i=new Image;i.onload=function(){r[t]=i,e()&&o.forEach(function(e){e()})},r[t]=!1,i.src=t}function i(e){e instanceof Array?e.forEach(function(e){t(e)}):t(e)}function n(e){return r[e]}function s(e){o.push(e)}var r={},o=[];window.Resources={load:i,get:n,onReady:s,isReady:e}}();var Collision=function(){var e=function(){};return e.isColliding=function(e,t){return e.x<t.x+t.width&&e.x+t.width>t.x&&e.y<t.y+t.height&&e.height+e.y>t.y},e}(),Engine=function(e){function t(e){f.entities.forEach(function(t){t.update(e)}),player.update(e)}function i(e){t(e)}function n(){var e;for(e=0;e<f.entities.length;e++)f.entities[e].render(u);player.render(u)}function s(){var e,t,i=["images/water-block.png","images/stone-block.png","images/stone-block.png","images/stone-block.png","images/grass-block.png","images/grass-block.png"],s=6,r=5;for(u.clearRect(0,0,c.width,c.height),e=0;s>e;e++)for(t=0;r>t;t++)u.drawImage(Resources.get(i[e]),101*t,83*e);n()}function r(){if(d){var e=Date.now(),t=(e-l)/1e3;i(t),s(),l=e,h.requestAnimationFrame(r)}}function o(){f.reset(),d=!0,l=Date.now(),r()}var l,a=e.document,h=e.window,c=a.createElement("canvas"),u=c.getContext("2d"),d=!1,f=function(){};return f.entities=[],f.width=c.width=505,f.height=c.height=606,c.className+=" canvas-game",a.getElementsByClassName("level")[0].appendChild(c),f.reset=function(){d=!1},f.pause=function(){d=!1},f.preload=function(){function e(e,t){var i=["char-boy","char-cat-girl","char-horn-girl","char-pink-girl","char-princess-girl","enemy-bug","Gem Blue","Gem Green","Gem Orange","grass-block","Heart","Key","Rock","Selector","Star","stone-block","water-block"];return i.map(function(i){return e+i+"."+t})}Resources.load(e("images/","png")),Resources.isReady()?o():Resources.onReady(o)},e.ctx=u,f}(this),Model=function(){var e={},t=function(){};return t.set=function(t,i){return e[t]=i,i},t.get=function(t){return e[t]},t}(),Timer=function(e,t){this.intervals=e,this.delay=t,this.running=!1,this.listeners={},this.time=0,this.laps=0};(function(){this.start=function(){this.running=!0,this.time=this.delay,this.laps=this.intervals},this.update=function(e){this.running&&(this.time=Math.max(0,this.time-e),0===this.time&&(this.laps-=1,this.laps<=0?(this.running=!1,this.dispatch("COMPLETE")):(this.time=this.delay,this.dispatch("UPDATE"))))},this.on=function(e,t){this.listeners.hasOwnProperty(e)||(this.listeners[e]=[]),this.listeners[e].push(t)},this.dispatch=function(e){var t,i;if(this.listeners.hasOwnProperty(e))for(i=this.listeners[e],t=0;t<i.length;t++)i[t](this)}}).call(Timer.prototype);var Grid=function(){var e=function(){};return e.cellWidth=101,e.cellHeight=83,e.columns=5,e.rows=6,e.offsetY=50,e.getXFromColumn=function(t){var i=Math.max(0,Math.min(t,e.columns-1));return i*e.cellWidth},e.getYFromRow=function(t){return t=Math.max(0,Math.min(t,e.rows-1)),e.offsetY+t*e.cellHeight},e}(),Level=function(){this.reset()};(function(){this.reset=function(){this.level=Model.set("level",0),this.lastLevel=7,Model.set("level_total_time",15),Model.set("level_complete",!1)},this.next=function(){this.level=Model.set("level",this.level+1)},this.addEntities=function(){var e,t=this.levelData();for(Engine.entities=[],e=0;e<t.length;e++)t[e].hasOwnProperty("t")?"key"===t[e].t?Engine.entities.push(new Key(t[e].r,t[e].c)):"water"===t[e].t&&Engine.entities.push(new Water(t[e].r,t[e].c)):Engine.entities.push(new Enemy(t[e].r,t[e].c,t[e].s))},this.levelData=function(){return 0===this.level?[{r:0,c:0,t:"water"},{r:0,c:1,t:"water"},{r:0,c:2,t:"key"},{r:0,c:3,t:"water"},{r:0,c:4,t:"water"}]:1===this.level?[{r:3,c:0,s:200},{r:3,c:2,s:200},{r:3,c:4,s:200},{r:0,c:0,t:"water"},{r:0,c:1,t:"water"},{r:0,c:2,t:"key"},{r:0,c:3,t:"water"},{r:0,c:4,t:"water"}]:2===this.level?[{r:1,c:0,s:-100},{r:1,c:1,s:-100},{r:1,c:3,s:-100},{r:1,c:4,s:-100},{r:0,c:0,t:"water"},{r:0,c:1,t:"water"},{r:0,c:2,t:"key"},{r:0,c:3,t:"water"},{r:0,c:4,t:"water"}]:3===this.level?[{r:2,c:0,s:500},{r:2,c:4,s:600},{r:0,c:0,t:"water"},{r:0,c:1,t:"water"},{r:0,c:2,t:"key"},{r:0,c:3,t:"water"},{r:0,c:4,t:"water"}]:4===this.level?[{r:1,c:0,s:-100},{r:1,c:1,s:-100},{r:1,c:3,s:-100},{r:1,c:4,s:-100},{r:3,c:0,s:200},{r:3,c:2,s:200},{r:3,c:4,s:200},{r:0,c:0,t:"water"},{r:0,c:1,t:"water"},{r:0,c:2,t:"key"},{r:0,c:3,t:"water"},{r:0,c:4,t:"water"}]:5===this.level?[{r:2,c:0,s:500},{r:2,c:4,s:600},{r:3,c:0,s:200},{r:3,c:2,s:200},{r:3,c:4,s:200},{r:0,c:0,t:"water"},{r:0,c:1,t:"water"},{r:0,c:2,t:"key"},{r:0,c:3,t:"water"},{r:0,c:4,t:"water"}]:6===this.level?[{r:1,c:0,s:-100},{r:1,c:1,s:-100},{r:1,c:3,s:-100},{r:1,c:4,s:-100},{r:2,c:0,s:500},{r:2,c:4,s:600},{r:0,c:0,t:"water"},{r:0,c:1,t:"water"},{r:0,c:2,t:"key"},{r:0,c:3,t:"water"},{r:0,c:4,t:"water"}]:[{r:1,c:0,s:-100},{r:1,c:1,s:-100},{r:1,c:3,s:-100},{r:1,c:4,s:-100},{r:2,c:0,s:500},{r:2,c:4,s:600},{r:3,c:0,s:200},{r:3,c:2,s:200},{r:3,c:4,s:200},{r:0,c:0,t:"water"},{r:0,c:1,t:"water"},{r:0,c:2,t:"key"},{r:0,c:3,t:"water"},{r:0,c:4,t:"water"}]}}).call(Level.prototype);var Scene=function(){var e=function(){},t=new Level,i=function(e){var t=e.target.src;player.sprite=t.slice(t.indexOf("/images/")+1,t.length),El.removeClass(El.getElements("selected-char"),"selected-char"),El.addClass(e.target,"selected-char")};return e.startMenu=function(){var e,t=document.getElementsByClassName("char");for(e=0;e<t.length;e++)t[e].addEventListener("click",i);Engine.reset(),El.show("char_select"),El.hide("level"),El.hide("gameover"),El.hide("gamewin"),scene="char_select"},e.startGame=function(e){e=e||!1,e?t.reset():Model.set("level_complete",!1),Engine.preload(),player.respawn(),t.addEntities(),Engine.entities.push(ui),ui.start(),El.show("level"),El.hide("char_select"),El.hide("gameover"),El.hide("gamewin"),scene="level"},e.endGame=function(){El.show("gameover"),Engine.pause()},e.winGame=function(){El.show("gamewin"),Engine.pause()},e.levelComplete=function(){Model.set("level_complete",!0),Engine.entities.push(new Explosion(0,2)),setTimeout(e.nextLevel,1500)},e.nextLevel=function(){t.next(),t.level>t.lastLevel?e.winGame():e.startGame()},e}(),Sensor=function(e,t,i,n,s,r){this.x=e,this.y=t,this.width=i,this.height=n,this.offsetX=s,this.offsetY=r,this.debug=!1};(function(){this.render=function(e){this.debug&&(e.beginPath(),e.strokeStyle="red",e.rect(this.x,this.y,this.width,this.height),e.stroke())},this.position=function(e,t){this.x=e+this.offsetX,this.y=t+this.offsetY}}).call(Sensor.prototype);var Render=function(e){this.owner=e};(function(){var e={x:0,y:0};this.render=function(e){var t=this.owner.flipped?-1:1,i=this.getPosition();e.save(),e.scale(t,1),e.globalAlpha=this.owner.alpha||1,e.drawImage(Resources.get(this.owner.sprite),i.x,i.y,101,171),e.restore()},this.getPosition=function(){var t=this.owner.flipped?-1:1;return e.x=(this.owner.x+this.owner.offsetX)*t,e.x+=1===t?0:-101,e.y=this.owner.y+this.owner.offsetY,e}}).call(Render.prototype);var UI=function(){this.keys=0,this.levelTime=0,this.time=0};(function(){this.start=function(){this.keys=Model.get("level"),this.levelTime=Model.get("level_total_time"),this.levelTimer=new Timer(1,this.levelTime),this.levelTimer.on("COMPLETE",this.onTimerComplete),this.levelTimer.start()},this.onTimerComplete=function(){Model.get("level_complete")||Scene.endGame()},this.formattedTime=function(){var e=Math.round(this.levelTimer.time);return"00:"+(e>9?e:"0"+e)},this.text=function(e,t,i,n,s){e.save(),e.font="30px Comic Sans MS",("left"===s||"right"===s||"center"===s)&&(e.textAlign=s),e.fillText(t,i,n),e.restore()},this.update=function(e){Model.get("level_complete")||(this.keys=Model.get("level"),this.levelTimer.update(e))},this.render=function(e){this.text(e,"Keys: x"+this.keys,0,30),this.text(e,"Time: "+this.formattedTime(),Engine.width,30,"right")}}).call(UI.prototype);var Key=function(e,t){this.entity=new Entity(this,Grid.getXFromColumn(t),Grid.getYFromRow(e),"images/Key.png",0,-33-Grid.offsetY),this.sensor=new Sensor(0,0,50,30,25,25),this.renderer=new Render(this)};(function(){this.update=function(e){this.sensor.position(this.x,this.y),player&&player.isAlive&&this.isAlive&&Collision.isColliding(this.sensor,player.sensor)&&(this.isAlive=!1,player.hit("key"))},this.render=function(e){this.renderer.render(e),this.sensor.render(e)}}).call(Key.prototype);var Water=function(e,t){this.entity=new Entity(this,Grid.getXFromColumn(t),Grid.getYFromRow(e),"images/Key.png",0,-33-Grid.offsetY),this.sensor=new Sensor(0,0,50,30,25,25)};(function(){this.update=function(e){this.sensor.position(this.x,this.y),player&&player.isAlive&&Collision.isColliding(this.sensor,player.sensor)&&player.hit("water")},this.render=function(e){this.sensor.render(e)}}).call(Water.prototype);var Enemy=function(e,t,i){this.entity=new Entity(this,Grid.getXFromColumn(t),Grid.getYFromRow(e),"images/enemy-bug.png",0,-33-Grid.offsetY),this.row=e,this.speed=i,this.flipped=0>i,this.sensor=new Sensor(0,0,50,50,25,12),this.renderer=new Render(this)};(function(){this.update=function(e){this.x+=e*this.speed,this.x>Grid.columns*Grid.cellWidth+Grid.cellWidth?this.x=Grid.getXFromColumn(0)-Grid.cellWidth:this.x<-Grid.cellWidth&&(this.x=Grid.columns*Grid.cellWidth+Grid.cellWidth),this.sensor.position(this.x,this.y),player&&player.isAlive&&Collision.isColliding(this.sensor,player.sensor)&&player.hit("enemy")},this.render=function(e){this.renderer.render(e),this.sensor.render(e)}}).call(Enemy.prototype);var Player=function(){this.entity=new Entity(this,0,0,"images/char-boy.png",0,-33-Grid.offsetY),this.isAlive=!1,this.alpha=0,this.sensor=new Sensor(0,0,50,30,25,25),this.renderer=new Render(this),this.blinkTimer=new Timer(5,.2);var e=this,t=function(){e.alpha=1,e.isAlive=!0},i=function(){e.alpha=.4===e.alpha?1:.4},n=function(t){e.handleInput(t)};this.blinkTimer.on("COMPLETE",t),this.blinkTimer.on("UPDATE",i),document.addEventListener("keyup",n),this.respawn()};(function(){var e={37:"left",38:"up",39:"right",40:"down"},t={left:{axis:"x",dir:-1},up:{axis:"y",dir:-1},right:{axis:"x",dir:1},down:{axis:"y",dir:1}};this.respawn=function(){this.sensor.x=this.x=Grid.getXFromColumn(2),this.sensor.y=this.y=Grid.getYFromRow(5),this.isAlive=!1,this.alpha=.4,this.blinkTimer.start()},this.hit=function(e){"water"===e||"enemy"===e?this.respawn():"key"===e&&Scene.levelComplete()},this.getMovement=function(e,t){var i;return"x"===e?(i=Math.floor(this.x/Grid.cellWidth)+t,Grid.getXFromColumn(i)):(i=Math.floor(this.y/Grid.cellHeight)+t,Grid.getYFromRow(i))},this.handleInput=function(i){var n=e[i.keyCode];if(n&&this.isAlive===!0&&!Model.get("level_complete")){var s=t[n];s.hasOwnProperty("axis")&&(this[s.axis]=this.getMovement(s.axis,s.dir))}},this.update=function(e){this.sensor.position(this.x,this.y),this.isAlive||this.blinkTimer.update(e)},this.render=function(e){this.renderer.render(e),this.sensor.render(e)}}).call(Player.prototype);var Star=function(e,t){this.entity=new Entity(this,Grid.getXFromColumn(t),Grid.getYFromRow(e),"images/Star.png",0,-33-Grid.offsetY),this.renderer=new Render(this),this.speed=500,this.angle=Math.round(180*Math.random())*Math.PI/180};(function(){this.update=function(e){this.x+=this.speed*Math.cos(this.angle)*e,this.y+=this.speed*Math.sin(this.angle)*e,this.alpha=Math.max(.01,this.alpha-1*e)},this.render=function(e){this.renderer.render(e)}}).call(Star.prototype);var Explosion=function(e,t){this.stars=[],this.addStars(e,t,10)};(function(){this.addStars=function(e,t,i){var n;for(n=0;i>n;n++)this.stars.push(new Star(e,t))},this.update=function(e){var t,i=this.stars.length;if(i>0)if(this.stars[0].alpha<=.01)this.stars=[];else for(t=0;i>t;t++)this.stars[t].update(e)},this.render=function(e){var t,i=this.stars.length;for(t=0;i>t;t++)this.stars[t].render(e)}}).call(Explosion.prototype);var player=new Player,ui=new UI,scene="",App=function(){var e=function(){Scene.startGame(!0)},t=function(){Scene.startGame()},i=function(){Scene.startMenu()};El.addListener(El.getElements("btn-play")[0],"click",e),El.addListener(El.getElements("btn-replay")[0],"click",t),El.addListener(El.getElements("btn-menu"),"click",i),Scene.startMenu()}();
//# sourceMappingURL=data:application/json;base64,
